version: 2

ccu_store:
  db_name: ccu_store
  port: 27017

robot_store:
  db_name: robot_store
  port: 27017

experiment_store:
  port: 27017

fleet:
  - ropod_001
  - ropod_002
  - ropod_003

allocation_method: tessi-srea

ccu:
  auctioneer:
    round_time: 15 # seconds
    alternative_timeslots: True
  dispatcher:
    freeze_window: 5 # seconds
  planner:
    map_name: brsu

robot:
  bidder:
    bidding_rule:
      robustness: srea  # has to be the same as the stp_solver
      temporal: completion_time
    auctioneer_name: fms_zyre_api # This is completely Zyre dependent
    planner:
      map_name: brsu
  executor_interface:
    corrective_measure: re-allocate
    time_resolution: 0.5 # minutes

robot_api:
  version: 0.1.0
  middleware:
    - zyre
  zyre:
    zyre_node:
      node_name: proxy
      interface: null
      groups:
        - TASK-ALLOCATION
      message_types: # Types of messages the node will listen to. Messages not listed will be ignored
        - TASK-ANNOUNCEMENT
        - TASK-CONTRACT
        - DISPATCH-QUEUE-UPDATE
        - TASK
      debug_msgs: false
    acknowledge: false
    publish:
      bid:
        groups: ['TASK-ALLOCATION']
        msg_type: 'BID'
        method: whisper
      task-contract-acknowledgement:
        groups: ['TASK-ALLOCATION']
        msg_type: 'TASK-CONTRACT-ACKNOWLEDGEMENT'
        method: shout
      archive-task:
        groups: ['TASK-ALLOCATION']
        msg_type: 'ARCHIVE-TASK'
        method: shout
    callbacks:
      - msg_type: 'TASK-ANNOUNCEMENT'
        component: 'bidder.task_announcement_cb'
      - msg_type: 'TASK-CONTRACT'
        component: 'bidder.task_contract_cb'
      - msg_type: 'DISPATCH-QUEUE-UPDATE'
        component: 'executor_interface.schedule_monitor.dispatch_queue_update_cb'
      - msg_type: 'TASK'
        component: 'executor_interface.task_cb'
      - msg_type: 'TASK'
        component: '.task_cb'

ccu_api:
  version: 0.1.0
  middleware:
    - zyre
    #- rest
    #- ros
  zyre:
    zyre_node:
      node_name: fms_zyre_api
      interface: null
      groups:
        - TASK-ALLOCATION
      message_types: # Types of messages the node will listen to. Messages not listed will be ignored
        - BID
        - TASK-CONTRACT-ACKNOWLEDGEMENT
        - START-TEST
        - ARCHIVE-TASK
    acknowledge: false
    debug_messages:
      - 'TASK-REQUEST'
    publish:
      task-announcement:
        msg_type: 'TASK-ANNOUNCEMENT'
        groups: ['TASK-ALLOCATION']
        method: shout
      task-contract:
        msg_type: 'TASK-CONTRACT'
        groups: ['TASK-ALLOCATION']
        method: shout
      task:
        msg_type: 'TASK'
        groups: ['TASK-ALLOCATION']
        method: shout
      dispatch-queue-update:
        msg_type: 'DISPATCH-QUEUE-UPDATE'
        groups: ['TASK-ALLOCATION']
        method: whisper
    callbacks:
      - msg_type: 'START-TEST'
        component: '.start_test_cb'
      - msg_type: 'BID'
        component: 'auctioneer.bid_cb'
      - msg_type: 'TASK-CONTRACT-ACKNOWLEDGEMENT'
        component: 'auctioneer.task_contract_acknowledgement_cb'
      - msg_type: 'ARCHIVE-TASK'
        component: '.archive_task_cb'

logger:
  version: 1
  formatters:
    default:
      format: '[%(levelname)-5.5s]  %(asctime)s [%(name)-35.35s] %(message)s'
      datefmt: '%Y-%m-%d %H:%M:%S'
  handlers:
    console:
      class: ropod.utils.logging.color.ColorizingStreamHandler
      level: DEBUG
      formatter: default
      stream: ext://sys.stdout
    file:
      class: logging.handlers.TimedRotatingFileHandler
      level: DEBUG
      formatter: default
      filename: /var/log/mrta/fms.log
      when: 'm'
      interval: 5
  loggers:
    mrs:
      level: DEBUG
  root:
    level: DEBUG
    handlers: [console, file]